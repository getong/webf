// Generated by WebF TSDL, don't edit this file directly.
// Generate command: node scripts/generate_binding_code.js
// clang-format off
/*
 * Copyright (C) 2022-present The WebF authors. All rights reserved.
 */
#ifndef WEBF_CORE_WEBF_API_PLUGIN_API_CANVAS_RENDERING_CONTEXT_H_
#define WEBF_CORE_WEBF_API_PLUGIN_API_CANVAS_RENDERING_CONTEXT_H_
#include <stdint.h>
#include "core/native/vector_value_ref.h"
#include "rust_readable.h"
#include "webf_value.h"
namespace webf {
class SharedExceptionState;
class ExecutingContext;
typedef struct NativeValue NativeValue;
typedef struct AtomicStringRef AtomicStringRef;
class CanvasRenderingContext;
enum class CanvasRenderingContextType {
  kCanvasRenderingContext = 0,
};
using PublicCanvasRenderingContextRelease = void (*)(CanvasRenderingContext*);
using PublicCanvasRenderingContextDynamicTo = WebFValue<CanvasRenderingContext, WebFPublicMethods> (*)(CanvasRenderingContext*, CanvasRenderingContextType);
struct CanvasRenderingContextPublicMethods : public WebFPublicMethods {
  static void Release(CanvasRenderingContext* canvas_rendering_context);
  static WebFValue<CanvasRenderingContext, WebFPublicMethods> DynamicTo(CanvasRenderingContext* canvas_rendering_context, CanvasRenderingContextType canvas_rendering_context_type);
  double version{1.0};
  PublicCanvasRenderingContextRelease canvas_rendering_context_release{Release};
  PublicCanvasRenderingContextDynamicTo canvas_rendering_context_dynamic_to{DynamicTo};
};
}  // namespace webf
#endif  // WEBF_CORE_WEBF_API_PLUGIN_API_CANVAS_RENDERING_CONTEXT_H_
