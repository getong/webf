// Generated by WebF TSDL, don't edit this file directly.
// Generate command: node scripts/generate_binding_code.js
// clang-format off
/*
 * Copyright (C) 2022-present The WebF authors. All rights reserved.
 */
#ifndef WEBF_CORE_WEBF_API_PLUGIN_API_HTML_BODY_ELEMENT_H_
#define WEBF_CORE_WEBF_API_PLUGIN_API_HTML_BODY_ELEMENT_H_
#include <stdint.h>
#include "core/native/vector_value_ref.h"
#include "rust_readable.h"
#include "html_element.h"
namespace webf {
class IDLEventHandler;
typedef struct IDLEventHandlerPublicMethods IDLEventHandlerPublicMethods;
class SharedExceptionState;
class ExecutingContext;
typedef struct NativeValue NativeValue;
typedef struct AtomicStringRef AtomicStringRef;
class HTMLBodyElement;
using PublicHTMLBodyElementGetOnblur = WebFValue<IDLEventHandler, IDLEventHandlerPublicMethods> (*)(HTMLBodyElement*);
using PublicHTMLBodyElementSetOnblur = void (*)(HTMLBodyElement*, IDLEventHandler*, SharedExceptionState*);
using PublicHTMLBodyElementGetOnerror = WebFValue<IDLEventHandler, IDLEventHandlerPublicMethods> (*)(HTMLBodyElement*);
using PublicHTMLBodyElementSetOnerror = void (*)(HTMLBodyElement*, IDLEventHandler*, SharedExceptionState*);
using PublicHTMLBodyElementGetOnfocus = WebFValue<IDLEventHandler, IDLEventHandlerPublicMethods> (*)(HTMLBodyElement*);
using PublicHTMLBodyElementSetOnfocus = void (*)(HTMLBodyElement*, IDLEventHandler*, SharedExceptionState*);
using PublicHTMLBodyElementGetOnload = WebFValue<IDLEventHandler, IDLEventHandlerPublicMethods> (*)(HTMLBodyElement*);
using PublicHTMLBodyElementSetOnload = void (*)(HTMLBodyElement*, IDLEventHandler*, SharedExceptionState*);
using PublicHTMLBodyElementGetOnresize = WebFValue<IDLEventHandler, IDLEventHandlerPublicMethods> (*)(HTMLBodyElement*);
using PublicHTMLBodyElementSetOnresize = void (*)(HTMLBodyElement*, IDLEventHandler*, SharedExceptionState*);
using PublicHTMLBodyElementGetOnscroll = WebFValue<IDLEventHandler, IDLEventHandlerPublicMethods> (*)(HTMLBodyElement*);
using PublicHTMLBodyElementSetOnscroll = void (*)(HTMLBodyElement*, IDLEventHandler*, SharedExceptionState*);
struct HTMLBodyElementPublicMethods : public WebFPublicMethods {
  static WebFValue<IDLEventHandler, IDLEventHandlerPublicMethods> Onblur(HTMLBodyElement* html_body_element);
  static void SetOnblur(HTMLBodyElement* html_body_element, IDLEventHandler* onblur, SharedExceptionState* shared_exception_state);
  static WebFValue<IDLEventHandler, IDLEventHandlerPublicMethods> Onerror(HTMLBodyElement* html_body_element);
  static void SetOnerror(HTMLBodyElement* html_body_element, IDLEventHandler* onerror, SharedExceptionState* shared_exception_state);
  static WebFValue<IDLEventHandler, IDLEventHandlerPublicMethods> Onfocus(HTMLBodyElement* html_body_element);
  static void SetOnfocus(HTMLBodyElement* html_body_element, IDLEventHandler* onfocus, SharedExceptionState* shared_exception_state);
  static WebFValue<IDLEventHandler, IDLEventHandlerPublicMethods> Onload(HTMLBodyElement* html_body_element);
  static void SetOnload(HTMLBodyElement* html_body_element, IDLEventHandler* onload, SharedExceptionState* shared_exception_state);
  static WebFValue<IDLEventHandler, IDLEventHandlerPublicMethods> Onresize(HTMLBodyElement* html_body_element);
  static void SetOnresize(HTMLBodyElement* html_body_element, IDLEventHandler* onresize, SharedExceptionState* shared_exception_state);
  static WebFValue<IDLEventHandler, IDLEventHandlerPublicMethods> Onscroll(HTMLBodyElement* html_body_element);
  static void SetOnscroll(HTMLBodyElement* html_body_element, IDLEventHandler* onscroll, SharedExceptionState* shared_exception_state);
  double version{1.0};
  HTMLElementPublicMethods html_element;
  PublicHTMLBodyElementGetOnblur html_body_element_get_onblur{Onblur};
  PublicHTMLBodyElementSetOnblur html_body_element_set_onblur{SetOnblur};
  PublicHTMLBodyElementGetOnerror html_body_element_get_onerror{Onerror};
  PublicHTMLBodyElementSetOnerror html_body_element_set_onerror{SetOnerror};
  PublicHTMLBodyElementGetOnfocus html_body_element_get_onfocus{Onfocus};
  PublicHTMLBodyElementSetOnfocus html_body_element_set_onfocus{SetOnfocus};
  PublicHTMLBodyElementGetOnload html_body_element_get_onload{Onload};
  PublicHTMLBodyElementSetOnload html_body_element_set_onload{SetOnload};
  PublicHTMLBodyElementGetOnresize html_body_element_get_onresize{Onresize};
  PublicHTMLBodyElementSetOnresize html_body_element_set_onresize{SetOnresize};
  PublicHTMLBodyElementGetOnscroll html_body_element_get_onscroll{Onscroll};
  PublicHTMLBodyElementSetOnscroll html_body_element_set_onscroll{SetOnscroll};
};
}  // namespace webf
#endif  // WEBF_CORE_WEBF_API_PLUGIN_API_HTML_BODY_ELEMENT_H_
