// Generated by WebF TSDL, don't edit this file directly.
// Generate command: node scripts/generate_binding_code.js
// clang-format off
/*
 * Copyright (C) 2022-present The WebF authors. All rights reserved.
 */
#ifndef WEBF_CORE_WEBF_API_PLUGIN_API_HTML_SCRIPT_ELEMENT_H_
#define WEBF_CORE_WEBF_API_PLUGIN_API_HTML_SCRIPT_ELEMENT_H_
#include <stdint.h>
#include "core/native/vector_value_ref.h"
#include "rust_readable.h"
#include "html_element.h"
namespace webf {
class SharedExceptionState;
class ExecutingContext;
typedef struct NativeValue NativeValue;
typedef struct AtomicStringRef AtomicStringRef;
class HTMLScriptElement;
using PublicHTMLScriptElementGetSrc = NativeValue (*)(HTMLScriptElement*, SharedExceptionState* shared_exception_state);
using PublicHTMLScriptElementSetSrc = void (*)(HTMLScriptElement*, const char*, SharedExceptionState*);
using PublicHTMLScriptElementGetType = NativeValue (*)(HTMLScriptElement*, SharedExceptionState* shared_exception_state);
using PublicHTMLScriptElementSetType = void (*)(HTMLScriptElement*, const char*, SharedExceptionState*);
using PublicHTMLScriptElementGetNoModule = NativeValue (*)(HTMLScriptElement*, SharedExceptionState* shared_exception_state);
using PublicHTMLScriptElementSetNoModule = void (*)(HTMLScriptElement*, int32_t, SharedExceptionState*);
using PublicHTMLScriptElementGetAsync = NativeValue (*)(HTMLScriptElement*, SharedExceptionState* shared_exception_state);
using PublicHTMLScriptElementSetAsync = void (*)(HTMLScriptElement*, int32_t, SharedExceptionState*);
using PublicHTMLScriptElementGetText = NativeValue (*)(HTMLScriptElement*, SharedExceptionState* shared_exception_state);
using PublicHTMLScriptElementSetText = void (*)(HTMLScriptElement*, const char*, SharedExceptionState*);
using PublicHTMLScriptElementGetReadyState = NativeValue (*)(HTMLScriptElement*, SharedExceptionState* shared_exception_state);
using PublicHTMLScriptElementSupports = int32_t (*)(HTMLScriptElement*, const char*, SharedExceptionState*);
struct HTMLScriptElementPublicMethods : public WebFPublicMethods {
  static NativeValue Src(HTMLScriptElement* html_script_element, SharedExceptionState* shared_exception_state);
  static void SetSrc(HTMLScriptElement* html_script_element, const char* src, SharedExceptionState* shared_exception_state);
  static NativeValue Type(HTMLScriptElement* html_script_element, SharedExceptionState* shared_exception_state);
  static void SetType(HTMLScriptElement* html_script_element, const char* type, SharedExceptionState* shared_exception_state);
  static NativeValue NoModule(HTMLScriptElement* html_script_element, SharedExceptionState* shared_exception_state);
  static void SetNoModule(HTMLScriptElement* html_script_element, int32_t noModule, SharedExceptionState* shared_exception_state);
  static NativeValue Async(HTMLScriptElement* html_script_element, SharedExceptionState* shared_exception_state);
  static void SetAsync(HTMLScriptElement* html_script_element, int32_t async, SharedExceptionState* shared_exception_state);
  static NativeValue Text(HTMLScriptElement* html_script_element, SharedExceptionState* shared_exception_state);
  static void SetText(HTMLScriptElement* html_script_element, const char* text, SharedExceptionState* shared_exception_state);
  static NativeValue ReadyState(HTMLScriptElement* html_script_element, SharedExceptionState* shared_exception_state);
  static int32_t Supports(HTMLScriptElement* html_script_element, const char* type, SharedExceptionState* shared_exception_state);
  double version{1.0};
  HTMLElementPublicMethods html_element;
  PublicHTMLScriptElementGetSrc html_script_element_get_src{Src};
  PublicHTMLScriptElementSetSrc html_script_element_set_src{SetSrc};
  PublicHTMLScriptElementGetType html_script_element_get_type{Type};
  PublicHTMLScriptElementSetType html_script_element_set_type{SetType};
  PublicHTMLScriptElementGetNoModule html_script_element_get_no_module{NoModule};
  PublicHTMLScriptElementSetNoModule html_script_element_set_no_module{SetNoModule};
  PublicHTMLScriptElementGetAsync html_script_element_get_async{Async};
  PublicHTMLScriptElementSetAsync html_script_element_set_async{SetAsync};
  PublicHTMLScriptElementGetText html_script_element_get_text{Text};
  PublicHTMLScriptElementSetText html_script_element_set_text{SetText};
  PublicHTMLScriptElementGetReadyState html_script_element_get_ready_state{ReadyState};
  PublicHTMLScriptElementSupports html_script_element_supports{Supports};
};
}  // namespace webf
#endif  // WEBF_CORE_WEBF_API_PLUGIN_API_HTML_SCRIPT_ELEMENT_H_
