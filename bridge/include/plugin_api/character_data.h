// Generated by WebF TSDL, don't edit this file directly.
// Generate command: node scripts/generate_binding_code.js
// clang-format off
/*
 * Copyright (C) 2022-present The WebF authors. All rights reserved.
 */
#ifndef WEBF_CORE_WEBF_API_PLUGIN_API_CHARACTER_DATA_H_
#define WEBF_CORE_WEBF_API_PLUGIN_API_CHARACTER_DATA_H_
#include <stdint.h>
#include "core/native/vector_value_ref.h"
#include "rust_readable.h"
#include "node.h"
namespace webf {
class SharedExceptionState;
class ExecutingContext;
typedef struct NativeValue NativeValue;
typedef struct AtomicStringRef AtomicStringRef;
class CharacterData;
using PublicCharacterDataGetData = AtomicStringRef (*)(CharacterData*);
using PublicCharacterDataSetData = void (*)(CharacterData*, const char*, SharedExceptionState*);
using PublicCharacterDataGetLength = int64_t (*)(CharacterData*);
struct CharacterDataPublicMethods : public WebFPublicMethods {
  static AtomicStringRef Data(CharacterData* character_data);
  static void SetData(CharacterData* character_data, const char* data, SharedExceptionState* shared_exception_state);
  static int64_t Length(CharacterData* character_data);
  double version{1.0};
  NodePublicMethods node;
  PublicCharacterDataGetData character_data_get_data{Data};
  PublicCharacterDataSetData character_data_set_data{SetData};
  PublicCharacterDataGetLength character_data_get_length{Length};
};
}  // namespace webf
#endif  // WEBF_CORE_WEBF_API_PLUGIN_API_CHARACTER_DATA_H_
