// Generated by WebF TSDL, don't edit this file directly.
// Generate command: node scripts/generate_binding_code.js
// clang-format off
/*
 * Copyright (C) 2022-present The WebF authors. All rights reserved.
 */
#ifndef WEBF_CORE_WEBF_API_PLUGIN_API_NODE_LIST_H_
#define WEBF_CORE_WEBF_API_PLUGIN_API_NODE_LIST_H_
#include <stdint.h>
#include "core/native/vector_value_ref.h"
#include "rust_readable.h"
#include "webf_value.h"
namespace webf {
class Node;
typedef struct NodePublicMethods NodePublicMethods;
class SharedExceptionState;
class ExecutingContext;
typedef struct NativeValue NativeValue;
typedef struct AtomicStringRef AtomicStringRef;
class NodeList;
enum class NodeListType {
  kNodeList = 0,
};
using PublicNodeListGetLength = int64_t (*)(NodeList*);
using PublicNodeListItem = WebFValue<Node, NodePublicMethods> (*)(NodeList*, double, SharedExceptionState*);
using PublicNodeListRelease = void (*)(NodeList*);
using PublicNodeListDynamicTo = WebFValue<NodeList, WebFPublicMethods> (*)(NodeList*, NodeListType);
struct NodeListPublicMethods : public WebFPublicMethods {
  static int64_t Length(NodeList* node_list);
  static WebFValue<Node, NodePublicMethods> Item(NodeList* node_list, double index, SharedExceptionState* shared_exception_state);
  static void Release(NodeList* node_list);
  static WebFValue<NodeList, WebFPublicMethods> DynamicTo(NodeList* node_list, NodeListType node_list_type);
  double version{1.0};
  PublicNodeListGetLength node_list_get_length{Length};
  PublicNodeListItem node_list_item{Item};
  PublicNodeListRelease node_list_release{Release};
  PublicNodeListDynamicTo node_list_dynamic_to{DynamicTo};
};
}  // namespace webf
#endif  // WEBF_CORE_WEBF_API_PLUGIN_API_NODE_LIST_H_
