{
  "metadata": {
    "templates": [
    ]
  },
  // This file specifies all the methods in css_property.h and the necessary
  // information for code generation of the CSSProperty subclasses.
  parameters: {
    // - return_type
    // Return type of this method.
    return_type: {
      default: "",
      valid_type: "str",
    },

    // - parameters
    // The parameters of this method. This string should be the types of
    // all parameters, inside brackets and comma separated.
    parameters: {
      default: "",
      valid_type: "str",
    },

  },
  data: [
    {
      name: "ParseSingleValue",
      return_type: "std::shared_ptr<const CSSValue>",
      parameters: "(CSSParserTokenStream&, std::shared_ptr<const CSSParserContext> context, const CSSParserLocalContext&)",
    },
    {
      name: "ParseShorthand",
      return_type: "bool",
      parameters: "(bool, CSSParserTokenStream&, std::shared_ptr<const CSSParserContext> context, const CSSParserLocalContext&, std::vector<CSSPropertyValue>&)",
    },
    {
      name: "CSSValueFromComputedStyleInternal",
      return_type: "std::shared_ptr<const CSSValue>",
      parameters: "(const ComputedStyle&, const LayoutObject*, bool allow_visited_style, CSSValuePhase value_phase)",
    },
    {
      name: "ColorIncludingFallback",
      return_type: "const webf::Color",
      parameters: "(bool, const ComputedStyle&, bool* is_current_color = nullptr)",
    },
    {
      name: "InitialValue",
      return_type: "std::shared_ptr<const CSSValue>",
      parameters: "()",
    },
  ]
}
